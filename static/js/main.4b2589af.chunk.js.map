{"version":3,"sources":["constants.js","components/TodoItem/todoItem.js","components/TodoList/todoList.js","components/Form/form.js","components/Filters/filters.js","containers/todo/todo.js","actions/actionCreator.js","App.js","reportWebVitals.js","reducers/tasks.js","store.js","reducers/filters.js","reducers/index.js","index.js"],"names":["ADD_TASK","REMOVE_TASK","COMPLETED_TASK","CHANGE_FILTER","TodoList","props","this","title","completed","completedTask","removeTask","id","onClick","className","React","Component","defaultProps","tasksList","map","Form","value","onChange","onKeyPress","placeholder","FILTERS_BTN","text","Filters","amounts","activeFilter","changeFilter","amount","ToDo","handlerInputChange","target","setState","taskText","addTask","a","key","state","length","Date","getTime","filterTasks","tasks","filter","task","getActiveTasksCounter","isLoaded","error","TASKS","setTimeout","filters","isTasksExist","filteredTasks","taskCounter","src","connect","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","load","namespace","preloadedState","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b2589af.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const COMPLETED_TASK = 'COMPLETED_TASK';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';","import React  from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./todoItem.css\";\r\n\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n    \r\n    render(){\r\n        const { title, completed, completedTask, removeTask, id} = this.props;\r\n        return (\r\n            <li onClick={()=>completedTask(id)} className=\"todo-item\">\r\n                <i className={completed ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\r\n                <span  className={completed ? 'completed text' : 'text'}>{title}</span>\r\n                <i onClick={()=> removeTask(id)} className=\"fas fa-times\" />\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nTodoList.propTypes = {\r\n    title: PropTypes.string,\r\n    completed: PropTypes.bool,\r\n    removeTask: PropTypes.func,\r\n    completedTask: PropTypes.func,\r\n    id: PropTypes.number\r\n}\r\n  \r\nTodoList.defaultProps = {\r\n    title: '',\r\n    completed: false,\r\n    removeTask: ()=> {},\r\n    completedTask: ()=>{},\r\n    id: 0\r\n}\r\n\r\nexport default TodoList;","import React  from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport TodoItem from \"../TodoItem/todoItem\";\r\n\r\nimport \"./todoList.css\";\r\n\r\nclass TodoList extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    \r\n  }\r\n  \r\n  render(){\r\n   const { tasksList, removeTask, completedTask } = this.props;\r\n   return(\r\n    <ul className=\"todo-list\">\r\n      {tasksList.map(({ id, title, completed }) => (\r\n        <TodoItem key={id}  id={id} completedTask={completedTask} removeTask={removeTask} title={title} completed={completed} />\r\n      ))}\r\n    </ul>\r\n   )\r\n  }\r\n}\r\n\r\n\r\nTodoList.propTypes = {\r\n  tasksList: PropTypes.array,\r\n  removeTask: PropTypes.func,\r\n  completedTask: PropTypes.func,\r\n}\r\n\r\nTodoList.defaultProps = {\r\n  tasksList: [],\r\n  removeTask: ()=>{},\r\n  completedTask: ()=>{}\r\n}\r\n\r\nexport default TodoList;\r\n","import React  from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./form.css\";\r\n\r\nconst Form = ({ value, onChange, onKeyPress}) => (\r\n    <div className=\"todo-input-wrapper\">\r\n      <i className=\"fas fa-plus\" />\r\n      <input\r\n        className=\"todo-input\"\r\n        placeholder=\"Click to add task\"\r\n        onChange={onChange}\r\n        value={value}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n    </div>\r\n);\r\nForm.propTypes = {\r\n    onChange: PropTypes.func,\r\n    onKeyPress: PropTypes.func,\r\n    value: PropTypes.string,\r\n  }\r\n  \r\nForm.defaultProps = {\r\n    onChange: () => {},\r\n    onKeyPress: () => {},\r\n    value: '',\r\n}\r\n  \r\nexport default Form;","import React  from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./filter.css\";\r\n\r\nconst FILTERS_BTN = [\r\n    {\r\n      text: 'All',\r\n      id: 'all',\r\n    },\r\n    {\r\n      text: 'Active',\r\n      id: 'active',\r\n    },\r\n    {\r\n      text: 'Completed',\r\n      id: 'completed'\r\n    }\r\n  ];\r\n\r\nclass Filters extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n    }\r\n    \r\n    render(){\r\n        const { amounts, activeFilter, changeFilter } = this.props;\r\n        return (\r\n            <div className=\"footer\">\r\n                <span className=\"amount\">{`${amounts} Tasks left`}</span>\r\n                <div className=\"btn-group\">\r\n                {FILTERS_BTN.map(({ text, id }) => (\r\n                    <button\r\n                    onClick={()=>changeFilter(id)}\r\n                    key={id}\r\n                    className={id === activeFilter ? \"filter-btn active\" : 'filter-btn'}\r\n                    >{text}</button>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    amount: PropTypes.number,\r\n    activeFilter: PropTypes.string,\r\n    changeFilter: PropTypes.func\r\n}\r\n  \r\nFilters.defaultProps = {\r\n    amount: 0,\r\n    activeFilter: 'all',\r\n    changeFilter: ()=>{}\r\n}\r\n\r\nexport default Filters;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addTask, removeTask, completedTask, changeFilter } from \"../../actions/actionCreator\";\r\n\r\nimport TodoList from \"../../components/TodoList/todoList\";\r\nimport Form from \"../../components/Form/form\";\r\nimport Filters from \"../../components/Filters/filters\";\r\n\r\nimport \"./todo.css\";\r\n\r\n\r\nclass ToDo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {  \r\n            isLoaded: false,\r\n            error: null,\r\n            taskText: '',\r\n            TASKS: {}\r\n        }\r\n    }\r\n\r\n    handlerInputChange = ({target: {value}}) => {\r\n      this.setState({\r\n        taskText: value\r\n      })\r\n    }\r\n\r\n    addTask = async ({key}) => {\r\n      const { taskText } = this.state;\r\n\r\n      if(taskText.length > 3 && key === 'Enter') {\r\n        const { addTask } = this.props;\r\n\r\n        addTask((new Date()).getTime(), taskText, false);\r\n       \r\n        this.setState({\r\n          taskText: ''\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      setTimeout(()=>{\r\n            this.setState({\r\n              isLoaded: true,\r\n              error: ''\r\n            })   \r\n          }, 500) \r\n      }\r\n\r\n    filterTasks = (tasks, activeFilter) => {\r\n      switch (activeFilter) {\r\n        case 'completed':\r\n          return tasks.filter(task => task.completed);\r\n        case 'active':\r\n          return tasks.filter(task => !task.completed);\r\n        default:\r\n          return tasks;\r\n      }\r\n    }\r\n\r\n    getActiveTasksCounter = tasks => tasks.filter(task => !task.completed).length;\r\n\r\n    render(){\r\n        const {activeFilter, isLoaded, error, taskText} = this.state;\r\n        const {tasks, removeTask, completedTask, filters, changeFilter} = this.props;\r\n        const isTasksExist = tasks && tasks.length > 0;\r\n        const filteredTasks = this.filterTasks(tasks, filters);\r\n        const taskCounter = this.getActiveTasksCounter(tasks);\r\n        if (error) {\r\n          return <div>Помилка: {error}</div>;\r\n        } else if (!isLoaded) {\r\n          return <div><img src=\"./6.gif\" /></div>;\r\n        } else {\r\n        return ( \r\n          <div className=\"todo-wrapper\">\r\n            <Form onKeyPress={this.addTask} onChange={this.handlerInputChange} value={taskText} />\r\n            {isTasksExist && <TodoList tasksList={filteredTasks} completedTask={completedTask} removeTask={removeTask} />}\r\n            {isTasksExist && <Filters changeFilter={changeFilter} amounts={taskCounter} activeFilter={filters} />}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n}\r\nexport default connect(({tasks, filters}) => ({\r\n    tasks,\r\n    filters\r\n}), { addTask, removeTask, completedTask, changeFilter})(ToDo);","import { ADD_TASK, REMOVE_TASK, COMPLETED_TASK, CHANGE_FILTER } from \"../constants\";\r\n\r\nexport const addTask = (id, title, completed) => ({\r\n    type: ADD_TASK,\r\n    id,\r\n    title,\r\n    completed\r\n});\r\n\r\nexport const removeTask = id => ({\r\n    type: REMOVE_TASK,\r\n    id\r\n} )\r\n\r\nexport const completedTask = id => ({\r\n    type: COMPLETED_TASK,\r\n    id\r\n} )\r\n\r\nexport const changeFilter = activeFilter => ({\r\n    type: CHANGE_FILTER,\r\n    activeFilter\r\n})","import React from 'react';\nimport ToDo from './containers/todo/todo';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <ToDo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TASK, REMOVE_TASK, COMPLETED_TASK} from \"../constants\";\r\nimport { load } from \"redux-localstorage-simple\";\r\n\r\nlet TASKS = load({namespace: 'todo-list'});\r\n\r\nif(!TASKS || !TASKS.tasks || !TASKS.tasks.length){\r\n    TASKS = {\r\n        tasks: []\r\n    }\r\n}\r\n\r\n\r\n// let TASKS = [\r\n//     {\r\n//         id: 1,\r\n//         title: 'Test 1',\r\n//         completed: true\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         title: 'Test 2',\r\n//         completed: false\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         title: 'Test 3',\r\n//         completed: true\r\n//     }\r\n// ];\r\n\r\nconst tasks = (state = TASKS.tasks, {id, title, completed, type}) => {   \r\n     switch (type){\r\n        case ADD_TASK: \r\n            return [\r\n                ...state,\r\n                {\r\n                    id,\r\n                    title,\r\n                    completed\r\n                }\r\n            ]\r\n        case REMOVE_TASK: \r\n            return [...state].filter(task => task.id !== id);\r\n        \r\n        case COMPLETED_TASK:\r\n            return [...state].map(task => {\r\n                if(task.id === id){\r\n                    task.completed = !task.completed\r\n                }\r\n                return task\r\n            })\r\n            \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default tasks;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { save } from 'redux-localstorage-simple'\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== 'production' &&\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState => (\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(\r\n      applyMiddleware(save({ namespace: 'todo-list' }))\r\n    ),\r\n  )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;","import { CHANGE_FILTER } from \"../constants\";\r\n\r\nconst BASE_FILTER = 'all';\r\n\r\nconst filters = (state = BASE_FILTER, {type, activeFilter}) => {\r\n    switch (type) {\r\n        case CHANGE_FILTER:\r\n            return activeFilter;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filters;","import { combineReducers } from 'redux';\r\nimport tasks from \"./tasks\";\r\nimport filters from \"./filters\";\r\n\r\nconst rootReducer = combineReducers({tasks, filters});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport  store from \"./store\";\n\nReactDOM.render(\n  (<Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>),\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}